{"version":3,"sources":["MessageContextProvider.tsx","InMemoryHeroContextProvider.tsx","HeroSearch/HeroSearch.tsx","Dashboard/Dashboard.tsx","Heroes/Heroes.tsx","HeroDetail/HeroDetail.tsx","Messages/Messages.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MessageContext","React","createContext","MessageContextProvider","children","useState","messages","setMessages","clear","useEffect","length","context","add","message","Provider","value","HeroContext","InMemoryHeroContextProvider","useContext","id","name","heroes","setHeroes","getHeroes","of","pipe","tap","_","log","getHero","from","filter","searchHeroes","term","map","trim","toLowerCase","includes","x","addHero","hero","Math","max","newHero","deleteHero","heroFound","find","updateHero","HeroSearch","className","htmlFor","onChange","event","target","debounceTime","distinctUntilChanged","switchMap","subscribe","to","Dashboard","slice","Heroes","heroName","setHeroName","disabled","onClick","title","h","handleDelete","HeroDetail","useParams","setHero","goBack","useHistory","handleBack","toUpperCase","placeholder","Messages","index","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ubAYaA,EAAiBC,IAAMC,cAAmC,IA0BxDC,EAxBgB,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,SAChC,EAAgCC,mBAAmB,IAAnD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAQ,kBAAMD,EAAY,KAEhCE,qBAAU,WACJH,EAASI,QAAU,IACrBF,MAED,CAACF,EAASI,SAEb,IAAMC,EAA+B,CACnCL,WACAM,IAAK,SAACC,GAAD,OAAqBN,EAAY,GAAD,mBAAKD,GAAL,CAAeO,MACpDL,SAGF,OACE,cAACR,EAAec,SAAhB,CAAyBC,MAAOJ,EAAhC,SACGP,KCbMY,EAAcf,IAAMC,cAAgC,IA0FlDe,EAxFqB,SAAC,GAA4C,IAA1Cb,EAAyC,EAAzCA,SAC7BQ,EAAQM,qBAAWlB,GAAnBY,IACR,EAA4BP,mBAAiB,CAC3C,CAAEc,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,GAAIC,KAAM,YAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,GAAIC,KAAM,aAVlB,mBAAOC,EAAP,KAAeC,EAAf,KAaMX,EAA4B,CAChCY,UAAW,kBACTC,YAAGH,GACAI,KACCC,aAAI,SAAAC,GAAC,OAAIC,EAAI,uBAGnBC,QAAS,SAACV,GAAD,OACPW,YAAKT,GACFI,KACCM,aAAO,qBAAGZ,KAA4BA,KACtCO,aAAI,SAAAC,GAAC,OAAIC,EAAI,mBAAD,OAAoBT,SAGtCa,aAAc,SAACC,GAAD,OACZT,YAAGH,GACAI,KACCS,aAAI,SAAAb,GAAM,OAAKY,EAAKE,OAElBd,EAAOU,QAAO,qBAAGX,KAAgBgB,cAAcC,SAASJ,EAAKG,kBAD7D,MAEFV,aAAI,SAAAY,GAAC,OAAIA,EAAE5B,OACTkB,EAAI,0BAAD,OAA2BK,EAA3B,MACHL,EAAI,uBAAD,OAAwBK,EAAxB,WAGXM,QAAS,SAACC,GACR,IAAMrB,EAAKE,EAAOX,OAAS,EAAI+B,KAAKC,IAAL,MAAAD,KAAI,YAAQpB,EAAOa,KAAI,qBAAGf,QAAgB,EAAI,GACvEwB,EAAO,2BAAQH,GAAR,IAAcrB,OAE3B,OAAOK,YAAGmB,GACPlB,KACCC,aAAI,SAACc,GACCA,GACFlB,EAAU,GAAD,mBAAKD,GAAL,CAAamB,QAG1Bd,aAAI,SAAAY,GAAC,OACHV,EADOU,EACH,oBAAD,OAAqBnB,GACpB,8BAIZyB,WAAY,SAACzB,GACX,IAAM0B,EAAYxB,EAAOyB,MAAK,qBAAG3B,KAA4BA,MAAO,GAEpE,OAAOK,YAAGqB,GACPpB,KACCC,aAAI,kBAAMJ,EAAU,YAAID,EAAOU,QAAO,qBAAGZ,KAA4BA,UACrEO,aAAI,SAAAC,GAAC,OAAIC,EAAI,mBAAD,OAAoBT,SAGtC4B,WAAY,SAACP,GACX,IAAMK,EAAYxB,EAAOyB,MAAK,qBAAG3B,KAAgBqB,EAAKrB,MAChDwB,EAAO,2BAAQE,GAAcL,GAEnC,OAAOhB,iBAAG,GACPC,KACCC,aAAI,kBAAMJ,EAAUD,EAAOa,KAAI,SAAAM,GAAI,OAAIA,EAAKrB,KAAOwB,EAAQxB,GAAKwB,EAAUH,SAC1Ed,aAAI,SAAAC,GAAC,OAAIC,EAAI,mBAAD,OAAoBY,EAAKrB,WAMvCS,EAAM,SAACf,GAAD,OAA2BD,EAAI,gBAAD,OAAiBC,KAE3D,OACE,cAACG,EAAYF,SAAb,CAAsBC,MAAOJ,EAA7B,SACGP,KC5DQ4C,G,MAnCI,WACjB,IAAQhB,EAAiBd,qBAAWF,GAA5BgB,aACR,EAA4B3B,mBAAiB,IAA7C,mBAAOgB,EAAP,KAAeC,EAAf,KAiBA,OACE,sBAAK2B,UAAW,SAAhB,+BACE,uBAAOC,QAAS,aAAhB,8CACA,uBAAO/B,GAAI,aAAcgC,SAlBR,SAACC,GACpB5B,YAAG4B,EAAMC,OAAOtC,OACbU,KAEC6B,YAAa,KAGbC,cAGAC,aAAU,SAACvB,GAAD,OAAkBD,EAAaC,OAE1CwB,WAAU,SAAA1C,GAAK,OAAIO,EAAUP,OAM9B,uBAEA,oBAAIkC,UAAW,gBAAf,8BACG5B,EAAOa,KAAI,gBAAGf,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,kDACE,cAAC,IAAD,CAAMsC,GAAE,kBAAavC,GAArB,8BAA4BC,KADrBD,aCJJwC,G,MAvBG,WAChB,IAAQpC,EAAcL,qBAAWF,GAAzBO,UACR,EAA4BlB,mBAAiB,IAA7C,mBAAOgB,EAAP,KAAeC,EAAf,KAOA,OALAb,qBAAU,WACRc,IAAYkC,WAAU,SAAApC,GAAM,OAAIC,EAAUD,QAEzC,IAEK,qCACN,iEACA,qBAAK4B,UAAW,cAAhB,8BACG5B,EACEuC,MAAM,EAAG,GACT1B,KAAI,gBAAGf,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACH,cAAC,IAAD,CAAesC,GAAE,kBAAavC,GAA9B,8BAAqCC,GAA1BD,QAIjB,cAAC,EAAD,6BC6CW0C,G,MAjEA,WACb,MAA2C3C,qBAAWF,GAA9CO,EAAR,EAAQA,UAAWgB,EAAnB,EAAmBA,QAASK,EAA5B,EAA4BA,WAC5B,EAAgCvC,mBAAiB,IAAjD,mBAAOyD,EAAP,KAAiBC,EAAjB,KACA,EAA4B1D,mBAAiB,IAA7C,mBAAOgB,EAAP,KAAeC,EAAf,KAEAb,qBAAU,WACRc,IAAYkC,WAAU,SAAApC,GAAM,OAAIC,EAAUD,QAEzC,IAoBH,OACE,qCACE,gEAEA,qDACE,uBAAO6B,QAAS,WAAhB,8CACA,uBAAO9B,KAAM,WAAYL,MAAO+C,EAAUX,SAf3B,SAACC,GAAgD,IAAD,EACnEW,EAAW,OAACX,QAAD,IAACA,GAAD,UAACA,EAAOC,cAAR,aAAC,EAAetC,QAcvB,uBAEA,wBACEiD,WAAU,OAACF,QAAD,IAACA,OAAD,EAACA,EAAU3B,QACrBc,UAAW,aACXgB,QAAS,WA5Bf1B,EAAQ,CAAEnB,KA4Be0C,IA5BCL,WAAU,SAAAjB,GAC9BA,IACFlB,EAAU,GAAD,mBAAKD,GAAL,CAAamB,KACtBuB,EAAY,SAsBZ,8CASF,oBAAId,UAAW,SAAf,8BACG5B,EAAOa,KAAI,SAAAM,GAAI,OACd,oDACE,eAAC,IAAD,CAAMkB,GAAE,kBAAalB,EAAKrB,IAA1B,+BACE,sBAAM8B,UAAW,QAAjB,8BAA2BT,EAAKrB,KAC/BqB,EAAKpB,QAER,wBACE6B,UAAW,SACXiB,MAAO,cACPD,QAAS,kBAhCA,SAACzB,GACpBlB,EAAS,OAACD,QAAD,IAACA,OAAD,EAACA,EAAQU,QAAO,SAAAoC,GAAC,OAAIA,IAAM3B,MACpCI,EAAWJ,EAAKrB,IAAIsC,YA8BKW,CAAa5B,IAH9B,sCALOA,EAAKrB,cCcTkD,G,MAzDI,WACjB,IAAQlD,EAAOmD,cAAPnD,GACR,EAAgCD,qBAAWF,GAAnCa,EAAR,EAAQA,QAASkB,EAAjB,EAAiBA,WACjB,EAAwB1C,qBAAxB,mBAAOmC,EAAP,KAAa+B,EAAb,KACA,EAAgClE,mBAAiB,IAAjD,mBAAOyD,EAAP,KAAiBC,EAAjB,KACQS,EAAWC,cAAXD,OAER/D,qBAAU,WACRoB,GAASV,GACNsC,WAAU,SAAAjB,GACT+B,EAAQ/B,GACRuB,EAAYvB,EAAKpB,WAGpB,CAACD,IAEJ,IAOMuD,EAAa,kBAAYF,KAM/B,OAAIhC,EAEA,qDACE,oDAAKA,EAAKpB,KAAKuD,cAAf,cACA,qDAAK,6DAAkBnC,EAAKrB,MAC5B,qDACE,uBAAO+B,QAAS,YAAhB,8CACA,uBACE/B,GAAI,YACJJ,MAAO+C,EACPc,YAAa,YACbzB,SAfW,SAACC,GACpBW,EAAYX,EAAMC,OAAOtC,QAUnB,0BAOF,wBAAQkD,QAAS,kBAAMS,KAAvB,0CACA,wBACEV,WAAU,OAACF,QAAD,IAACA,OAAD,EAACA,EAAU3B,QACrB8B,QAAS,WA7BXzB,GACFO,EAAW,2BAAKP,GAAN,IAAYpB,KAAM0C,KACzBL,WAAU,kBAAMiB,QAyBjB,0CAUC,kECvCMG,G,YAtBE,WACf,MAA4B3D,qBAAWlB,GAA/BM,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,MAIlB,OACE,qDACE,+DACA,wBACEwD,UAAW1D,EAASI,OACpBuC,UAAW,QACXgB,QAAS,kBARiBzD,KAK5B,iDAOCF,EAAS4B,KAAI,SAACrB,EAASiE,GAAV,OACZ,mDAAkBjE,GAARiE,WCcHC,EAzBH,kBACV,sBAAK9B,UAAU,MAAf,+BACE,qEACA,qDACE,cAAC,IAAD,CAAMS,GAAI,aAAV,4CACA,cAAC,IAAD,CAAMA,GAAI,UAAV,4CAEF,eAAC,IAAD,gCACE,cAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,IAAlB,8BACE,cAAC,EAAD,0BAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,8BACE,cAAC,EAAD,0BAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,8BACE,cAAC,EAAD,0BAEF,cAAC,IAAD,CAAOA,KAAK,cAAZ,8BACE,cAAC,EAAD,6BAGJ,cAAC,EAAD,4BCjBWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKRC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8a95e788.chunk.js","sourcesContent":["import React, { ReactElement, useEffect, useState } from 'react';\n\ntype MessageContextProps = {\n  messages: string[];\n  add: (message: string) => void;\n  clear: () => void;\n}\n\ntype MessageContextProviderProps = {\n  children: ReactElement | ReactElement[];\n};\n\nexport const MessageContext = React.createContext<MessageContextProps>({} as MessageContextProps);\n\nconst MessageContextProvider = ({ children }: MessageContextProviderProps) => {\n  const [messages, setMessages] = useState<string[]>([]);\n\n  const clear = () => setMessages([])\n\n  useEffect(() => {\n    if (messages.length >= 15) {\n      clear()\n    }\n  }, [messages.length])\n\n  const context: MessageContextProps = {\n    messages,\n    add: (message: string) => setMessages([...messages, message]),\n    clear,\n  }\n\n  return (\n    <MessageContext.Provider value={context}>\n      {children}\n    </MessageContext.Provider>\n  )\n}\n\nexport default MessageContextProvider;\n","import React, { ReactElement, useContext, useState } from 'react';\nimport { from, Observable, of } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\n\nimport { Hero } from './hero';\nimport { MessageContext } from './MessageContextProvider';\n\nexport type HeroContextProps = {\n  getHeroes: () => Observable<Hero[]>;\n  getHero: (id: number) => Observable<Hero>;\n  searchHeroes: (term: string) => Observable<Hero[]>;\n  addHero: (hero: Hero) => Observable<Hero>;\n  deleteHero: (id: number) => Observable<Hero>;\n  updateHero: (hero: Hero) => Observable<void>;\n}\n\ntype HeroContextProviderProps = {\n  children: ReactElement | ReactElement[];\n};\n\nexport const HeroContext = React.createContext<HeroContextProps>({} as HeroContextProps);\n\nconst InMemoryHeroContextProvider = ({ children }: HeroContextProviderProps) => {\n  const { add } = useContext(MessageContext);\n  const [heroes, setHeroes] = useState<Hero[]>([\n    { id: 11, name: 'Dr Nice' },\n    { id: 12, name: 'Narco' },\n    { id: 13, name: 'Bombasto' },\n    { id: 14, name: 'Celeritas' },\n    { id: 15, name: 'Magneta' },\n    { id: 16, name: 'RubberMan' },\n    { id: 17, name: 'Dynama' },\n    { id: 18, name: 'Dr IQ' },\n    { id: 19, name: 'Magma' },\n    { id: 20, name: 'Tornado' },\n  ]);\n\n  const context: HeroContextProps = {\n    getHeroes: (): Observable<Hero[]> => (\n      of(heroes)\n        .pipe(\n          tap(_ => log('fetched heroes')),\n        )\n    ),\n    getHero: (id): Observable<Hero> => (\n      from(heroes)\n        .pipe(\n          filter(({ id: heroId }) => heroId === id),\n          tap(_ => log(`fetched hero id=${id}`)),\n        )\n    ),\n    searchHeroes: (term: string): Observable<Hero[]> => (\n      of(heroes)\n        .pipe(\n          map(heroes => !term.trim() ?\n            [] :\n            heroes.filter(({ name }) => name.toLowerCase().includes(term.toLowerCase()))),\n          tap(x => x.length ?\n            log(`found heroes matching \"${term}\"`) :\n            log(`no heroes matching \"${term}\"`)),\n        )\n    ),\n    addHero: (hero: Hero): Observable<Hero> => {\n      const id = heroes.length > 0 ? Math.max(...heroes.map(({ id }) => id)) + 1 : 11;\n      const newHero = { ...hero, id };\n\n      return of(newHero)\n        .pipe(\n          tap((hero: Hero) => {\n            if (hero) {\n              setHeroes([...heroes, hero]);\n            }\n          }),\n          tap(x => x ?\n            log(`added hero w/ id=${id}`) :\n            log(`addHero limit reached`),\n          ),\n        );\n    },\n    deleteHero: (id: number): Observable<Hero> => {\n      const heroFound = heroes.find(({ id: heroId }) => heroId === id) || {} as Hero;\n\n      return of(heroFound)\n        .pipe(\n          tap(() => setHeroes([...heroes.filter(({ id: heroId }) => heroId !== id)])),\n          tap(_ => log(`deleted hero id=${id}`)),\n        );\n    },\n    updateHero: (hero: Hero): Observable<void> => {\n      const heroFound = heroes.find(({ id }) => id === hero.id);\n      const newHero = { ...heroFound, ...hero };\n\n      return of(void 0)\n        .pipe(\n          tap(() => setHeroes(heroes.map(hero => hero.id === newHero.id ? newHero : hero))),\n          tap(_ => log(`updated hero id=${hero.id}`)),\n        );\n    },\n  };\n\n  /** Log a HeroService message with the MessageService */\n  const log = (message: string): void => add(`HeroService: ${message}`);\n\n  return (\n    <HeroContext.Provider value={context}>\n      {children}\n    </HeroContext.Provider>\n  );\n};\n\nexport default InMemoryHeroContextProvider;\n","import { ChangeEvent, useContext, useState } from 'react';\nimport { of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { Link } from 'react-router-dom';\n\nimport { Hero } from '../hero';\nimport { HeroContext } from '../InMemoryHeroContextProvider';\n\nimport './HeroSearch.scoped.css';\n\nconst HeroSearch = () => {\n  const { searchHeroes } = useContext(HeroContext);\n  const [heroes, setHeroes] = useState<Hero[]>([]);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    of(event.target.value)\n      .pipe(\n        // wait 300ms after each keystroke before considering the term\n        debounceTime(300),\n\n        // ignore new term if same as previous term\n        distinctUntilChanged(),\n\n        // switch to new search observable each time the term changes\n        switchMap((term: string) => searchHeroes(term)),\n      )\n      .subscribe(value => setHeroes(value));\n  };\n\n  return (\n    <div className={'search'}>\n      <label htmlFor={'search-box'}>Hero Search</label>\n      <input id={'search-box'} onChange={handleChange} />\n\n      <ul className={'search-result'}>\n        {heroes.map(({ id, name }) => (\n          <li key={id}>\n            <Link to={`/detail/${id}`}>{name}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default HeroSearch;\n","import { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport HeroSearch from '../HeroSearch/HeroSearch';\nimport { HeroContext } from '../InMemoryHeroContextProvider';\nimport { Hero } from '../hero';\n\nimport './Dashboard.scoped.css'\n\nconst Dashboard = () => {\n  const { getHeroes } = useContext(HeroContext);\n  const [heroes, setHeroes] = useState<Hero[]>([]);\n\n  useEffect(() => {\n    getHeroes().subscribe(heroes => setHeroes(heroes));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (<>\n    <h2>Top Heroes</h2>\n    <div className={'heroes-menu'}>\n      {heroes\n        .slice(1, 5)\n        .map(({ id, name }) => (\n          <Link key={id} to={`/detail/${id}`}>{name}</Link>\n        ))}\n    </div>\n\n    <HeroSearch />\n  </>);\n};\n\nexport default Dashboard;\n","import { ChangeEvent, useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { HeroContext } from '../InMemoryHeroContextProvider';\nimport { Hero } from '../hero';\n\nimport './Heroes.scoped.css';\n\nconst Heroes = () => {\n  const { getHeroes, addHero, deleteHero } = useContext(HeroContext);\n  const [heroName, setHeroName] = useState<string>('');\n  const [heroes, setHeroes] = useState<Hero[]>([]);\n\n  useEffect(() => {\n    getHeroes().subscribe(heroes => setHeroes(heroes));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const add = (name: string): void => {\n    addHero({ name } as Hero).subscribe(hero => {\n      if (hero) {\n        setHeroes([...heroes, hero]);\n        setHeroName('');\n      }\n    });\n  };\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    setHeroName(event?.target?.value);\n  };\n\n  const handleDelete = (hero: Hero): void => {\n    setHeroes(heroes?.filter(h => h !== hero));\n    deleteHero(hero.id).subscribe();\n  };\n\n  return (\n    <>\n      <h2>My Heroes</h2>\n\n      <div>\n        <label htmlFor={'new-hero'}>Hero name: </label>\n        <input name={'new-hero'} value={heroName} onChange={handleChange} />\n\n        <button\n          disabled={!heroName?.trim()}\n          className={'add-button'}\n          onClick={() => add(heroName)}\n        >\n          Add hero\n        </button>\n      </div>\n\n      <ul className={'heroes'}>\n        {heroes.map(hero => (\n          <li key={hero.id}>\n            <Link to={`/detail/${hero.id}`}>\n              <span className={'badge'}>{hero.id}</span>\n              {hero.name}\n            </Link>\n            <button\n              className={'delete'}\n              title={'delete hero'}\n              onClick={() => handleDelete(hero)}\n            >x\n            </button>\n          </li>),\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Heroes;\n","import { useHistory, useParams } from 'react-router-dom';\nimport { ChangeEvent, useContext, useEffect, useState } from 'react';\n\nimport { Hero } from '../hero';\nimport { HeroContext } from '../InMemoryHeroContextProvider';\n\nimport './HeroDetail.scoped.css';\n\ntype HeroDetailRouteParams = {\n  id: string | undefined\n}\n\nconst HeroDetail = () => {\n  const { id } = useParams<HeroDetailRouteParams>();\n  const { getHero, updateHero } = useContext(HeroContext);\n  const [hero, setHero] = useState<Hero>();\n  const [heroName, setHeroName] = useState<string>('');\n  const { goBack } = useHistory();\n\n  useEffect(() => {\n    getHero(+id!)\n      .subscribe(hero => {\n        setHero(hero);\n        setHeroName(hero.name);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  const handleSave = (): void => {\n    if (hero) {\n      updateHero({ ...hero, name: heroName })\n        .subscribe(() => handleBack());\n    }\n  };\n\n  const handleBack = (): void => goBack();\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    setHeroName(event.target.value);\n  };\n\n  if (hero) {\n    return (\n      <div>\n        <h2>{hero.name.toUpperCase()} Details</h2>\n        <div><span>id: </span>{hero.id}</div>\n        <div>\n          <label htmlFor={'hero-name'}>Hero name: </label>\n          <input\n            id={'hero-name'}\n            value={heroName}\n            placeholder={'Hero name'}\n            onChange={handleChange}\n          />\n        </div>\n        <button onClick={() => handleBack()}>go back</button>\n        <button\n          disabled={!heroName?.trim()}\n          onClick={() => handleSave()}\n        >\n          save\n        </button>\n      </div>\n    );\n  }\n\n  return <p>Loading...</p>;\n};\n\nexport default HeroDetail;\n","import { useContext } from 'react';\nimport { MessageContext } from '../MessageContextProvider';\n\nimport './Messages.scoped.css';\n\nconst Messages = () => {\n  const { messages, clear } = useContext(MessageContext);\n\n  const handleClear = (): void => clear();\n\n  return (\n    <div>\n      <h2>Messages</h2>\n      <button\n        disabled={!messages.length}\n        className={'clear'}\n        onClick={() => handleClear()}\n      >\n        Clear messages\n      </button>\n      {messages.map((message, index) => (\n        <div key={index}>{message}</div>\n      ))}\n    </div>\n  );\n};\n\nexport default Messages;\n","import React from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\n\nimport Dashboard from './Dashboard/Dashboard';\nimport Heroes from './Heroes/Heroes';\nimport HeroDetail from './HeroDetail/HeroDetail';\n\nimport './App.scoped.css';\nimport Messages from './Messages/Messages';\n\nconst App = () => (\n  <div className=\"app\">\n    <h1>Tour of Heroes</h1>\n    <nav>\n      <Link to={'/dashboard'}>Dashboard</Link>\n      <Link to={'/heroes'}>Heroes</Link>\n    </nav>\n    <Switch>\n      <Route exact path=\"/\">\n        <Dashboard />\n      </Route>\n      <Route path=\"/dashboard\">\n        <Dashboard />\n      </Route>\n      <Route path=\"/heroes\">\n        <Heroes />\n      </Route>\n      <Route path=\"/detail/:id\">\n        <HeroDetail />\n      </Route>\n    </Switch>\n    <Messages />\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport InMemoryHeroContextProvider from './InMemoryHeroContextProvider';\nimport MessageContextProvider from './MessageContextProvider';\n\nimport './index.css';\n\n// <HashRouter> used here because GitHub Pages doesn't support BrowserRouter\nReactDOM.render(\n  <React.StrictMode>\n    <MessageContextProvider>\n      <InMemoryHeroContextProvider>\n        <HashRouter>\n          <App />\n        </HashRouter>\n      </InMemoryHeroContextProvider>\n    </MessageContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}